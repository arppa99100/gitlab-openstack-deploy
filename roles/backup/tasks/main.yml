---
- name: format new image volumee
  filesystem:
   dev: "{{ backup_device }}"
   fstype: xfs
  when: backup_device is defined and environment_type == "production"
  become: True

- name: mount image device
  mount:
    name: /backup/
    src: "{{ backup_device }}"
    state: mounted
    fstype: xfs
  when: backup_device is defined and environment_type == "production"
  become: True

- name: set permissions on image volume mount
  file:
    name: /backup/
    state: directory
    owner: cloud-user
    group: cloud-user
  become: True

- name: create data dir
  file:
    name: /backup/data/
    state: directory
    owner: cloud-user
    group: cloud-user
  become: True


- name: create data dir
  file:
    name: /backup/secret/
    state: directory
    owner: cloud-user
    group: cloud-user
    mode: 0700
  become: True
- name: install yum packages
  yum:
    state: installed
    name:
    - tmpwatch
  become: True

- name: set up private key
  copy:
    dest: /home/cloud-user/.ssh/id_rsa
    content: "{{ id_rsa_gitlab_backup }}"
    mode: 0700
    owner: cloud-user
    group: cloud-user
  become: True

- name: ensure ssh key exists
  command: "ssh-keyscan -p {{ gitlab_control_port }} -H {{ hostvars['gitlab']['ansible_default_ipv4']['address'] }}"
  register: new_host_fingerprint

- lineinfile:
    dest: ~cloud-user/.ssh/known_hosts
    line: "{{ item }}"
    create: yes
  with_items:
    - "{{ new_host_fingerprint.stdout_lines }}"

- name: set up cron job for data backup
  cron:
    name: "job for data backup"
    #daily on host seems to run at midnight, this is well past that
    hour: "3"
    minute: "10"
    job: rsync -atz -e "ssh -p {{ gitlab_control_port }}" root@{{ hostvars['gitlab']['ansible_default_ipv4']['address'] }}:/srv/gitlab/data/backups/ /backup/data/
    user: cloud-user
  become: True

- name: set up cron job
  cron:
    name: "job for sensitive backup"
    hour: "3"
    minute: "5"
    job: rsync -atz -e "ssh -p {{ gitlab_control_port }}" root@{{ hostvars['gitlab']['ansible_default_ipv4']['address'] }}:/srv/gitlab/config/backups/ /backup/secret/
    user: cloud-user
  become: True

- name: add old backup file cleanup to root crontab
  cron:
    name: remove old backup files
    minute: 30
    hour: 5
    job: tmpwatch -u 10d /backup/secret/ /backup/data/
  become: yes
